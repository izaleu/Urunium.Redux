<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cal="http://www.caliburnproject.org">

    <BooleanToVisibilityConverter x:Key="BoolToVis" />

    <DropShadowEffect x:Key="dropShadow" 
                      BlurRadius="5" 
                      Color="LightGray" 
                      Direction="240"
                      ShadowDepth="5" 
                       />

    <SolidColorBrush x:Key="solidWhite" 
                     Color="White"
                     />

    <Style x:Key="FooterNotesStyle"
           TargetType="TextBlock">

        <Setter Property="FontSize" 
                Value="10" 
                />

        <Setter Property="Foreground" 
                Value="DimGray" 
                />

        <Setter Property="TextAlignment" 
                Value="Center" 
                />
    </Style>

    <Style x:Key="GridStyle" 
           TargetType="Grid">

        <Setter Property="Background" 
                Value="{StaticResource solidWhite}" 
                />

        <Setter Property="Effect" 
                Value="{StaticResource dropShadow}" 
                />

        <Setter Property="HorizontalAlignment" 
                Value="Stretch" 
                />

        <Setter Property="Margin" 
                Value="20,0,20,0" 
                />

    </Style>

    <Style x:Key="GridWhenTodoItemsArePresent"  
           BasedOn="{StaticResource GridStyle}"
           TargetType="Grid">

        <Setter Property="Visibility" 
                Value="{Binding HasTodoItems, Converter={StaticResource BoolToVis}}" 
                />
    </Style>

    <Style x:Key="HyperLinkButtonStyle" 
           TargetType="Button">

        <Setter Property="Focusable" 
                Value="False" />

        <Setter Property="Foreground" 
                Value="Blue" />

        <Setter Property="Margin" 
                Value="5" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <TextBlock>
                        <Hyperlink>
                            <Run Text="{TemplateBinding Content}" />
                        </Hyperlink>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearCompletedStyle" 
           BasedOn="{StaticResource HyperLinkButtonStyle}"
           TargetType="Button">

        <Setter Property="HorizontalAlignment" 
                Value="Right" 
                />

        <Setter Property="Visibility" 
                Value="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=DataContext.ClearButtonIsVisible, Converter={StaticResource BoolToVis}}" 
                />
    </Style>

    <Style x:Key="NewTodoTextBox" 
           TargetType="TextBox">

        <Setter Property="FontFamily" 
                Value="Helvetica" 
                />

        <Setter Property="FontSize" 
                Value="24" 
                />

        <Setter Property="cal:Message.Attach" 
                Value="[Key Enter] = [OnNewTodoEnterKeyPress];"
                />
    </Style>

    <Style  x:Key="TodoHeading" 
            TargetType="TextBlock">

        <Setter Property="FontFamily" 
                Value="Helvetica Neue, Helvetica, Arial" 
                />

        <Setter Property="FontSize" 
                Value="100px" 
                />

        <Setter Property="FontStretch" 
                Value="ExtraCondensed" 
                />

        <Setter Property="FontWeight" 
                Value="Thin" 
                />

        <Setter Property="Foreground" 
                Value="Crimson" 
                />

        <Setter Property="Opacity" 
                Value="0.5" 
                />

        <Setter Property="Text" 
                Value="todos" 
                />

        <Setter Property="TextAlignment" 
                Value="Center" 
                />

    </Style>

    <Style x:Key="TodosListItem" 
           TargetType="ListViewItem">

        <Setter Property="IsSelected" 
                Value="{Binding Content.IsSelected, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleAllCheckBoxStyleBase"
           TargetType="{x:Type CheckBox}">

        <Setter Property="FocusVisualStyle"
                Value="{DynamicResource CheckBoxFocusVisual}" />

        <Setter Property="OverridesDefaultStyle"
                Value="true" />

        <Setter Property="SnapsToDevicePixels"
                Value="true" />

        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <BulletDecorator Background="Transparent">

                        <BulletDecorator.Bullet>

                            <Border Background="White"
                                    BorderBrush="Transparent"
                                    BorderThickness="1" 
                                    CornerRadius="12" 
                                    Height="25"
                                    Width="25">

                                <Grid>

                                    <Path x:Name="CheckMark"
                                          Data="M 0,4 L 8 10 16 4"
                                          Height="20"
                                          Width="20"
                                          SnapsToDevicePixels="False"
                                          StrokeThickness="3"
                                          Visibility="Visible">

                                        <Path.Stroke>
                                            <SolidColorBrush x:Name="CheckMarkStroke" Color="LightGray" />
                                        </Path.Stroke>
                                    </Path>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">

                                <VisualState x:Name="Checked">

                                    <Storyboard>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Color"
                                                                      Storyboard.TargetName="CheckMarkStroke">

                                            <DiscreteColorKeyFrame KeyTime="0"
                                                                   Value="DimGray"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleAllCheckboxStyle" 
           BasedOn="{StaticResource ToggleAllCheckBoxStyleBase}"
           TargetType="CheckBox">

        <Setter Property="BorderBrush">

            <Setter.Value>
                <SolidColorBrush Color="#d9d9d9" />
            </Setter.Value>
        </Setter>

        <Setter Property="Margin" 
                Value="5 25 5 5" 
                />

        <Setter Property="Padding" 
                Value="10 25 5 5" 
                />

        <Setter Property="Visibility" 
                Value="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=DataContext.HasTodoItems, Converter={StaticResource BoolToVis}}" 
                />

        <Setter Property="cal:Message.Attach" 
                Value="[Event Checked] = [Action OnToggleAllChecked()]; [Event Unchecked] = [Action OnToggleAllUnchecked()];" 
                />
    </Style>
    
    <ControlTemplate x:Key="FooterNotes">
        <Grid Margin="0 65 0 0">

            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />

                <RowDefinition Height="auto" />

                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0"
                       Style="{StaticResource FooterNotesStyle}">
                Double-click to edit a todo
            </TextBlock>

            <TextBlock Grid.Row="1"
                       Style="{StaticResource FooterNotesStyle}">
                Created by Nripendra
            </TextBlock>

            <TextBlock Grid.Row="2"
                       Style="{StaticResource FooterNotesStyle}">
                Part of Urunium.Redux
            </TextBlock>
        </Grid>

    </ControlTemplate>

    <ControlTemplate x:Key="WaterMarkTextbox" 
                     TargetType="TextBox">

        <Grid Margin="0 10 0 10">

            <Border Margin="5 0 5 5" 
                    Padding="2 5 0 0" 
                    VerticalAlignment="Center">

                <ScrollViewer x:Name="PART_ContentHost" 
                              FontFamily="Helvetica"
                              FontSize="24"
                              Height="30" 
                              HorizontalAlignment="Stretch"
                              />
            </Border>

            <TextBlock FontFamily="Helvetica"
                       FontSize="24"
                       FontStyle="Italic"
                       Foreground="LightGray"
                       HorizontalAlignment="Left" 
                       IsHitTestVisible="False" 
                       Margin="10 5 5 5" 
                       Text="What needs to be done?" 
                       VerticalAlignment="Center" >

                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">

                        <Setter Property="Visibility" 
                                Value="Collapsed"
                                />

                        <Style.Triggers>

                            <DataTrigger Binding="{Binding ElementName=NewTodo, Path=Text}" 
                                         Value="">

                                <Setter Property="Visibility" 
                                        Value="Visible"
                                        />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="TodoListFooter">
        <Grid Margin="-3 0 -3 0" 
              Style="{StaticResource GridWhenTodoItemsArePresent}">

            <Grid.Effect>
                <DropShadowEffect BlurRadius="3" 
                                  Color="LightGray"
                                  Direction="220"
                                  ShadowDepth="2" 
                                  />
            </Grid.Effect>

            <Grid.ColumnDefinitions>

                <ColumnDefinition Width="*" />

                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" 
                        HorizontalAlignment="Stretch"
                        Orientation="Horizontal">

                <TextBlock Foreground="DimGray"
                           Margin="5">
                    
                    <Run Text="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=DataContext.ItemsLeft, Mode=OneWay}" 
                         />
                    
                    <Run Text="items left" 
                         />
                </TextBlock>

                <Button IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=DataContext.CanClickShowAll}"
                        Style="{StaticResource HyperLinkButtonStyle}" 
                        cal:Message.Attach="[Event Click] = [Action OnShowAllClick()]">All</Button>

                <Button IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=DataContext.CanClickShowActive}"
                        Style="{StaticResource HyperLinkButtonStyle}" 
                        cal:Message.Attach="[Event Click] = [Action OnShowActiveClick()]">Active</Button>

                <Button IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=DataContext.CanClickShowCompleted}"
                        Style="{StaticResource HyperLinkButtonStyle}" 
                        cal:Message.Attach="[Event Click] = [Action OnShowCompletedClick()]">Completed</Button>
            </StackPanel>

            <Button x:Name="ClearButtonIsVisible" 
                    Grid.Column="1" 
                    Style="{StaticResource ClearCompletedStyle}" 
                    cal:Message.Attach="[Event Click] = [Action OnClearCompletedClick()]">Clear completed</Button>
        </Grid>
    </DataTemplate>

</ResourceDictionary>